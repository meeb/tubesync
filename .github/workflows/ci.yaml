name: Run Django tests for TubeSync

env:
  IMAGE_NAME: tubesync

on:
  workflow_dispatch:
  push:
    branches:
      - 'test-*'

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --system --skip-lock
      - name: Set up Django environment
        run: cp tubesync/tubesync/local_settings.py.example tubesync/tubesync/local_settings.py
      - name: Run Django tests
        run: cd tubesync && python3 manage.py test --verbosity=2
  containerise:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Find upstream GitHub slug
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          {
            var='GH_UPSTREAM_SLUG' ;
            delim='"'"${var}"'_EOF"' ;
            printf -- '%s<<%s\n' "${var}" "${delim}" ;
            gh api repos/:owner/:repo --jq .parent.full_name ;
            printf -- '%s\n' "${delim}" ;
          } >> "$GITHUB_ENV"
      - name: Upstream registry ref
        id: upstream
        run: |
          user="$(printf -- '%s\n' "${GH_UPSTREAM_SLUG}" | cut -d '/' -f 1)"
          user_lowercase="$(printf -- '%s\n' "${user}" | awk '{print tolower($0);}')" ;
          printf -- 'ref=ghcr.io/%s/%s:latest\n' \
            "${user_lowercase}" "${IMAGE_NAME}" >> "$GITHUB_OUTPUT" ;
          printf -- 'tag=ghcr.io/%s/%s:latest\n' \
            "${user_lowercase}" "${IMAGE_NAME}" >> "$GITHUB_OUTPUT" ;
      - name: Registry ref
        id: origin
        run: |
          user_lowercase="$(printf -- '%s\n' "${GITHUB_ACTOR}" | awk '{print tolower($0);}')" ;
          printf -- 'ref=ghcr.io/%s/%s:latest\n' \
            "${user_lowercase}" "${IMAGE_NAME}" >> "$GITHUB_OUTPUT" ;
          printf -- 'tag=ghcr.io/%s/%s:latest\n' \
            "${user_lowercase}" "${IMAGE_NAME}" >> "$GITHUB_OUTPUT" ;
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into GitHub Container Registry
        run: echo '${{ secrets.GITHUB_TOKEN }}' | docker login --password-stdin --username '${{ github.actor }}' 'https://ghcr.io'
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.origin.outputs.tag }}
          cache-from: |
            type=registry,ref=${{ steps.upstream.outputs.ref }}
            type=registry,ref=${{ steps.origin.outputs.ref }}
          cache-to: type=inline
          build-args: |
            IMAGE_NAME=${{ env.IMAGE_NAME }}
