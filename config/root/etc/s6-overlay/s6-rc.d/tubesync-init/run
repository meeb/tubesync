#!/command/with-contenv bash

# Change runtime user UID and GID
PUID="${PUID:-911}"
PUID="${PUID:-911}"
groupmod -o -g "$PGID" app
usermod -o -u "$PUID" app

# Reset permissions
chown -R app:app /run/app
chmod -R 0700 /run/app
chown -R app:app /config
chmod -R 0755 /config
chown -R root:app /app
chmod -R 0750 /app
chown -R app:app /app/common/static
chmod -R 0750 /app/common/static
chown -R app:app /app/static
chmod -R 0750 /app/static
find /app -type f ! -iname healthcheck.py -exec chmod 640 {} \;
chmod 0755 /app/healthcheck.py

# Optionally reset the download dir permissions
if [ "${TUBESYNC_RESET_DOWNLOAD_DIR:=True}" == "True" ]
then
    export TUBESYNC_RESET_DOWNLOAD_DIR
    echo "TUBESYNC_RESET_DOWNLOAD_DIR=True, Resetting /downloads directory permissions"
    chown -R app:app /downloads
    chmod -R 0755 /downloads
fi

# Prepare for nginx logging into /config/log/nginx
mkdir -p /config/log
rm -rf /config/log/nginx.9
for n in $(seq 8 -1 0)
do
    test '!' -d "/config/log/nginx.${n}" ||
    mv "/config/log/nginx.${n}" "/config/log/nginx.$((1 + n))"
done ; unset -v n ;
rm -rf /config/log/nginx.0
test '!' -d /config/log/nginx ||
mv /config/log/nginx /config/log/nginx.0
rm -rf /config/log/nginx
cp -a /var/log/nginx /config/log/
cp -p /config/log/nginx/access.log /config/log/nginx/access.log.gz

# Run migrations
exec s6-setuidgid app \
    /usr/bin/python3 /app/manage.py migrate
